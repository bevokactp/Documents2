
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


export PATH="${HOME}/.npm-global/bin:${PATH}"


export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
export PATH=$PATH:$JAVA_HOME/bin

export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools


# override jdk same name executable xmodmap
export PATH=$PATH:/usr/bin:/bin

alias python=python3.10


alias findDuplicate='find . ! -empty -type f -exec md5sum {} + | sort | uniq -w32 -dD'
alias lsl='ls -alF'
alias lss='du -h --max-depth=1 | sort -h'
alias trash_ls='ls -R ~/.local/share/Trash/files/'
alias fileslastchanged='find ./ -type f -exec stat --format "%Y :%y %n" "{}" \; | sort -nr | cut -d: -f2- | head -20'
alias treeIO='tree -L 2 -I 'node_modules''

alias snap_ls='ls /var/lib/snapd/snaps/'
alias lastinstalled='zgrep " installed " /var/log/dpkg.log*'

alias bashrc='code ~/.bashrc'
alias touchTree='function _createfile() { mkdir -p "$(dirname "$1")" && touch "$1"; }; _createfile'

alias getProcessByClikingWindow='xprop _NET_WM_PID | cut -d "" -f3'

alias memoryUsedTree='sudo du -ah . | sort -rh | head -n 20'
alias cinnamonRealod='pkill -HUP -f "cinnamon --replace"'

alias catCopy='function _catCopy() { cat "$1" | xclip -selection clipboard; }; _catCopy'
alias nepe8db='function _translate() { echo "$1" | perl -pe '\''s/ё/7/g; s/є/s/g; s/д/d/g; s/щ/f/g; s/ъ/g/g; s/ы/q/g; s/э/2/g; s/ж/z/g; s/и/1/g; s/й/l/g; s/ю/5/g; s/ф/0/g; s/з/3/g; s/ч/4/g; s/б/6/g; s/в/8/g; s/я/9/g; s/а/a/g; s/ь/b/g; s/с/c/g; s/е/e/g; s/н/h/g; s/і/i/g; s/ї/j/g; s/к/k/g; s/м/m/g; s/п/n/g; s/о/o/g; s/р/p/g; s/г/r/g; s/т/t/g; s/ц/u/g; s/л/v/g; s/ш/w/g; s/х/x/g; s/у/y/g; s/ /_/g'\''; }; _translate'

alias show_keycode='xev | grep keycode'

xmodmap -e "keycode  104 = Menu NoSymbol Menu"
xmodmap -pke > ~/.Xmodmap
export LC_ALL=C.UTF-8
if [ ! -e ~/.xinitrc ]; then
    echo "if [ -f $HOME/.Xmodmap ]; then" >> ~/.xinitrc
    echo "    /usr/bin/xmodmap $HOME/.Xmodmap" >> ~/.xinitrc
    echo "fi" >> ~/.xinitrc
fi
xmodmap -e "keycode  104 = Menu NoSymbol Menu"

alias paths='echo -e ${PATH//:/\\n}'

alias mp4tom4a='for i in *.mp4; do ffmpeg -i "$i" -vn -ar 44100 -ac 2 -b:a 192k  "${i%.*}.m4a"; done'
alias mp4Compress='for file in *.mp4; do ffmpeg -i "$file" -vf "scale=-2:480" "${file%.mp4}_480p.mp4"; done'


alias rmall='rm -rf -- ..?* .[!.]* *'
alias perename='python3 -c "import os; [os.rename(dirpath+\"/\"+filename, (dirpath+\"/\")+filename.lower().replace(\"урок\", \"\", 1).replace(\"..\", \".\").replace(\". \", \" \").replace(\", \", \" \").strip()) for dirpath, subdirs, files in os.walk(os.curdir) for filename in files]; [os.rename(dirpath, dirpath.lower().replace(\"урок\", \"\", 1).replace(\"..\", \".\").replace(\". \", \" \").replace(\", \", \" \").strip()) for dirpath, subdirs, files in os.walk(os.curdir) if dirpath != \".\"]"'
alias perenameRemoveStartWithDigits='for file in *; do new_name=$(echo "$file" | sed -E '\''s/^ +//'\'' | sed -E '\''s/^[0-9]+\.?//;s/^[.]+//'\'' ); if [ "$file" != "$new_name" ]; then mv "$file" "$new_name"; fi; done'


alias cdpa="cd ~/Insync/bevokactp@gmail.com/Google\ Drive/1/pa"
alias cddw='cd ~/Downloads/'
alias cddc='cd ~/Documents/'

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
